<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" 
        xmlns:Controls="clr-namespace:Corsair_Effects_Engine.Controls" 
        xmlns:p="clr-namespace:Corsair_Effects_Engine.Properties"
        xmlns:src="clr-namespace:Corsair_Effects_Engine"
        x:Class="Corsair_Effects_Engine.MainWindow"
        Title="Corsair Effects Engine" 
        Height="440" Width="900" ResizeMode="CanMinimize" Loaded="Window_Loaded" Closing="Window_Closing" 
        Icon="Resources/CorsairLogoTransparent.ico"
        Style="{StaticResource MyWindowStyle}" ContentRendered="Window_ContentRendered">

    <Window.Resources>
        <src:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
        <src:ColorToStringConverter x:Key="ColorToStringConverter"/>
        <!-- Tray Icon ContextMenu -->
        <ContextMenu x:Key="TrayContextMenu">
            <ContextMenu.Items>
                <MenuItem Header="Foreground Effects" IsCheckable="True" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundEffectEnabled, Mode=TwoWay}"/>
                <MenuItem Header="Background Effects" IsCheckable="True" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=BackgroundEffectEnabled, Mode=TwoWay}"/>
                <MenuItem Header="Static Profile" IsCheckable="True" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=StaticProfileEnabled, Mode=TwoWay}"/>
                <!--
                <Separator Style="{StaticResource CustomSeparator}"/>
                <MenuItem Header="Pause/Resumee" Click="PauseResumeEngine"/>
                -->
                <Separator Style="{StaticResource CustomSeparator}"/>
                <MenuItem Header="Quit" IsEnabled="True" Click="CloseMainWindow"/>
            </ContextMenu.Items>
        </ContextMenu>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="MainColumn1" Width="200*" MinWidth="200" MaxWidth="200"/>
            <ColumnDefinition x:Name="MainColumn2" Width="700*"/>
        </Grid.ColumnDefinitions>

        <!-- Left Column -->
        <Grid x:Name="GridControls" Grid.Column="0" Margin="0,0,0,10">
            <CheckBox x:Name="ForegroundCheck" Content="Foreground Effects" Margin="10,10,10,0" VerticalAlignment="Top" Height="16" ToolTip="Display foreground effects?"
                      IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundEffectEnabled, Mode=TwoWay}" Checked="ForegroundCheck_Checked"/>
            <ComboBox x:Name="ForegroundComboBox" Margin="10,26,10,0" VerticalAlignment="Top" Height="24" ToolTip="The foreground effects to display."
                          ItemsSource="{DynamicResource ForegroundEffectsList}"
                          SelectedValue="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundEffect, Mode=TwoWay}"/>
            <Button x:Name="ForegroundEditButton" Style="{StaticResource HyperlinkLikeButton}" Content="Edit" Margin="0,10,10,0" VerticalAlignment="Top" 
                    VerticalContentAlignment="Bottom" HorizontalAlignment="Right" Width="24" ToolTip="Edit the selected foreground effects." Click="ForegroundEditButton_Click"/>
            <CheckBox x:Name="BackgroundCheck" Content="Background Effects" Margin="10,60,10,0" VerticalAlignment="Top" Height="16" ToolTip="Display background effects?"
                      IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=BackgroundEffectEnabled, Mode=TwoWay}"/>
            <ComboBox x:Name="BackgroundComboBox" Margin="10,76,10,0" VerticalAlignment="Top" Height="24" ToolTip="The background effects to display."
                          ItemsSource="{DynamicResource BackgroundEffectsList}"
                          SelectedValue="{Binding Source={x:Static p:Settings.Default}, Path=BackgroundEffect, Mode=TwoWay}"/>
            <Button x:Name="BackgroundEditButton" Style="{StaticResource HyperlinkLikeButton}" Content="Edit" Margin="0,60,10,0" VerticalAlignment="Top" 
                    VerticalContentAlignment="Bottom" HorizontalAlignment="Right" Width="24" ToolTip="Edit the selected background effects." Click="BackgroundEditButton_Click"/>
            <CheckBox x:Name="StaticCheck" Content="Static Profile" Margin="10,110,10,0" VerticalAlignment="Top" Height="16" ToolTip="Display static lighting?"
                      IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=StaticProfileEnabled, Mode=TwoWay}"/>
            <ComboBox x:Name="StaticComboBox" Margin="10,126,10,0" VerticalAlignment="Top" Height="24" ToolTip="The static lighting profile to display."
                          SelectedValue="{Binding Source={x:Static p:Settings.Default}, Path=StaticProfileName, Mode=TwoWay}"/>
            <Button x:Name="StaticEditButton" Style="{StaticResource HyperlinkLikeButton}" Content="Edit" Margin="0,110,10,0" VerticalAlignment="Top" 
                    VerticalContentAlignment="Bottom" HorizontalAlignment="Right" Width="24" ToolTip="Edit the current static profile." Click="StaticEditButton_Click"/>
            <Grid x:Name="GridControlsButtons" Margin="0,0,10,0" HorizontalAlignment="Right" Width="180" Height="150" VerticalAlignment="Bottom">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30*"/>
                    <RowDefinition Height="30*"/>
                    <RowDefinition Height="30*"/>
                    <RowDefinition Height="30*"/>
                    <RowDefinition Height="30*"/>
                </Grid.RowDefinitions>
                <Button x:Name="MouseButton" Content="Mouse" VerticalAlignment="Top" Grid.Row="0" HorizontalAlignment="Right"
                        Click="MouseButton_Click" ToolTip="Show the Mouse Configuration Page." Visibility="Hidden"
                                   Style="{StaticResource BigTextOnlyButton}"/>
                <Button x:Name="KeyboardButton" Content="Keyboard" VerticalAlignment="Top" Grid.Row="1" HorizontalAlignment="Right"
                        Click="KeyboardButton_Click" ToolTip="Show the Keyboard Configuration and Visualizer Page." Visibility="Hidden"
                                   Style="{StaticResource BigTextOnlyButton}"/>
                <Button x:Name="UpdateButton" Content="Update" VerticalAlignment="Top" Grid.Row="2" HorizontalAlignment="Right"
                        Click="UpdateButton_Click" ToolTip="Update to the latest version." Visibility="Hidden"
                                   Style="{StaticResource BigTextOnlyButton}"/>
                <Button x:Name="LogButton" Content="Log" VerticalAlignment="Top" Grid.Row="3" HorizontalAlignment="Right"
                        Click="LogButton_Click" ToolTip="Display the Log and Log Settings. (Click twice for log only)"
                                   Style="{StaticResource BigTextOnlyButton}"/>
                <Button x:Name="SettingsButton" Content="Settings" VerticalAlignment="Top" Grid.Row="4" HorizontalAlignment="Right"
                        Click="SettingsButton_Click" ToolTip="Display the Settings Page."
                                   Style="{StaticResource BigTextOnlyButton}"/>
            </Grid>
        </Grid>

        <!-- Right Content -->
        <Grid x:Name="GridContent" Grid.Column="1" Visibility="Visible" Margin="0,0,0,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="ContentLeft" Width="500*"/>
                <ColumnDefinition x:Name="ContentRight" Width="200*"/>
            </Grid.ColumnDefinitions>
            <!-- Log -->
            <Grid x:Name="GridLeftLog" Grid.Column="0" Visibility="Hidden">
                <RichTextBox x:Name="LogTextBox" Background="#FF303030" Margin="0,10,10,0" VerticalScrollBarVisibility="Auto" 
                             ToolTip="Program output. Select Log again to hide or show settings." FontFamily="Consolas"
                             IsReadOnly="True"/>

            </Grid>
            <Grid x:Name="GridRightLog" Grid.Column="1" Visibility="Hidden">
                <Label Content="Log Verbosity" HorizontalAlignment="Left" Margin="10,5,0,0" VerticalAlignment="Top"/>
                <ComboBox x:Name="LogLevelComboBox" Margin="10,26,10,0" VerticalAlignment="Top" ToolTip="Verbosity of the log output."
                          ItemsSource="{DynamicResource LogLevelList}"
                          SelectedValue="{Binding Source={x:Static p:Settings.Default}, Path=LogLevel, Mode=TwoWay}"/>
            </Grid>

            <!-- Settings -->
            <Grid x:Name="GridLeftSettings" Grid.Column="0" Visibility="Hidden">
                <CheckBox x:Name="CheckMinimizeToTray" Content="Minimize to System Tray" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top"
                          ToolTip="Minimize to the System Tray instead of the Task Bar."
                          IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=OptMinimizeToTray, Mode=TwoWay}"/>
                <CheckBox x:Name="CheckStartWithWindows" Content="Start with Windows" HorizontalAlignment="Left" Margin="10,50,0,0" VerticalAlignment="Top"
                          ToolTip="Start CEE when Windows starts."
                          IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=OptStartWithWindows, Mode=TwoWay}" Checked="CheckStartWithWindows_Checked" Unchecked="CheckStartWithWindows_Unchecked"/>
                <CheckBox x:Name="CheckStartMinimized" Content="Start minimized" HorizontalAlignment="Left" Margin="10,70,0,0" VerticalAlignment="Top"
                          ToolTip="Start CEE in a minimized state."
                          IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=OptStartMinimized, Mode=TwoWay}"/>
                <CheckBox x:Name="Check16MColours" Content="16.8 Million colours" HorizontalAlignment="Left" Margin="270,10,0,0" VerticalAlignment="Top"
                          ToolTip="Run the keyboard in 16.8 million colour mode."
                          IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=Opt16MColours, Mode=TwoWay}"
                          IsEnabled="{Binding Source={x:Static p:Settings.Default}, Path=OptUseSdk, Mode=TwoWay, Converter={StaticResource boolSwap}}"/>
                <CheckBox x:Name="CheckDisplayLiveKeyboardPreview" Content="Display live keyboard preview" HorizontalAlignment="Left" Margin="10,110,0,0" VerticalAlignment="Top"
                          ToolTip="Show effects and animations on the Keyboard page as they're being rendered."
                          IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=OptLiveKeyboardPreview, Mode=TwoWay}" IsEnabled="False"/>
                <CheckBox x:Name="CheckWarnIfCueIsOpen" Content="Display a warning if CUE is open" HorizontalAlignment="Left" Margin="10,130,0,0" VerticalAlignment="Top"
                          ToolTip="Show a warning before starting effects if CUE is running."
                          IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=OptWarnIfCueRunning, Mode=TwoWay}" IsEnabled="False"/>
                <CheckBox x:Name="CheckLaunchCueOnExit" Content="Launch CUE on exit" HorizontalAlignment="Left" Margin="10,170,0,0" VerticalAlignment="Top"
                          ToolTip="Launch CUE upon quitting CEE. This requires the path to CUE to be entered below."
                          IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=OptLaunchCueOnExit, Mode=TwoWay}"/>
                <CheckBox x:Name="CheckRestoreLightingOnExit" Content="Restore lighting on exit" HorizontalAlignment="Left" Margin="10,190,0,0" VerticalAlignment="Top"
                          ToolTip="Restore on-device lighting to the keyboard and mouse when quitting."
                          IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=OptRestoreLightingOnExit, Mode=TwoWay}"/>
                <Label Content="Corsair Utility Engine (CUE) Path. Double click to browse." HorizontalAlignment="Left" Margin="10,0,0,20" Height="26" VerticalAlignment="Bottom"/>
                <TextBox x:Name="CuePathTextBox" Margin="10,0,10,2" IsReadOnly="True"
                         ToolTip="Navigate to the path of your CUE executable. This is used to launch CUE when quitting CEE."
                         Text="{Binding Source={x:Static p:Settings.Default}, Path=OptCuePath, Mode=TwoWay}" 
                         Height="23" VerticalAlignment="Bottom" MouseDoubleClick="CuePathTextBox_MouseDoubleClick"
                         Style="{StaticResource flatTextBox}"/>
                <CheckBox x:Name="CheckInverM1" Content="Invert M1 key on K95" HorizontalAlignment="Left" Margin="270,33,0,0" VerticalAlignment="Top"
                	ToolTip="Invert the colour of the M1 key on the K95. By default, it acts as a negative to what's sent to it, so this compensates."
                	IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=OptInvertM1, Mode=TwoWay}"/>
                <xctk:ColorPicker SelectedColor="{Binding Source={x:Static p:Settings.Default}, Path=OptAccentColor, 
                                    Mode=TwoWay, Converter={StaticResource ColorToStringConverter}}"
                                  HorizontalAlignment="Left" Margin="410,106,0,0" VerticalAlignment="Top" Width="50" 
                                  ColorMode="ColorCanvas" ShowDropDownButton="False" ShowAdvancedButton="False"/>
                <Label Content="Program Accent Colour:" HorizontalAlignment="Left" Margin="267,105,0,0" VerticalAlignment="Top"/>
                <Button x:Name="DonateButton" Content="Make a donation" HorizontalAlignment="Left" Margin="380,0,0,43" Width="auto"
                    Style="{StaticResource HyperlinkLikeButton}" Click="DonateButton_Click" Height="15" VerticalAlignment="Bottom"/>
                <CheckBox x:Name="UseSdkCheckBox" Content="Use SDK" HorizontalAlignment="Left" Margin="270,70,0,0" VerticalAlignment="Top"
                	ToolTip="Use the CUE SDK instead of direct hardware control."
                	IsChecked="{Binding OptUseSdk, Mode=TwoWay, Source={x:Static p:Settings.Default}}"/>
            </Grid>
            <Grid x:Name="GridRightSettings" Grid.Column="1" Visibility="Visible">
                <Label Content="Keyboard Model" HorizontalAlignment="Left" Margin="10,5,0,0" VerticalAlignment="Top"/>
                <ComboBox x:Name="KeyboardModelComboBox" Margin="10,26,10,0" VerticalAlignment="Top" ToolTip="Select the keyboard you wish to use."
                          ItemsSource="{DynamicResource KeyboardModelList}"
                          SelectedValue="{Binding Source={x:Static p:Settings.Default}, Path=KeyboardModel, Mode=TwoWay}" 
                          SelectionChanged="KeyboardAndMouseSettingsChanged"/>

                <Label Content="Keyboard Layout" HorizontalAlignment="Left" Margin="10,55,0,0" VerticalAlignment="Top"/>
                <ComboBox x:Name="KeyboardLayoutComboBox" Margin="10,76,10,0" VerticalAlignment="Top" ToolTip="Select the region of your keyboard."
                          ItemsSource="{DynamicResource KeyboardLayoutList}"
                          SelectedValue="{Binding Source={x:Static p:Settings.Default}, Path=KeyboardLayout, Mode=TwoWay}"
                          SelectionChanged="KeyboardAndMouseSettingsChanged"/>

                <Label Content="Mouse Model" HorizontalAlignment="Left" Margin="10,105,0,0" VerticalAlignment="Top"/>
                <ComboBox x:Name="MouseModelComboBox" Margin="10,126,10,0" VerticalAlignment="Top" ToolTip="Select the mouse you would like to use."
                          ItemsSource="{DynamicResource MouseModelList}"
                          SelectedValue="{Binding Source={x:Static p:Settings.Default}, Path=MouseModel, Mode=TwoWay}"
                          SelectionChanged="KeyboardAndMouseSettingsChanged"/>

                <RadioButton x:Name="AudioOutputDeviceRadioButton" Content="Audio Output Device" HorizontalAlignment="Left" Margin="10,160,0,0" VerticalAlignment="Top"
                             ToolTip="Capture audio from an output device, such as your speakers or headphones."
                             IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=OptAudioFromOutput, Mode=TwoWay}" Checked="AudioOutputDeviceRadioButton_Checked"/>
                <CheckBox x:Name="UseDefaultOutputDevice" Content="Use Default Device" HorizontalAlignment="Left" Margin="23,175,0,0" VerticalAlignment="Top"
                	ToolTip="Capture audio from an output device, such as your speakers or headphones."
                	IsChecked="{Binding OptAudioUseDefaultOutput, Mode=TwoWay, Source={x:Static p:Settings.Default}}" Checked="UseDefaultOutputDevice_Checked"/>
                <ComboBox x:Name="AudioOutputDeviceComboBox" Margin="10,190,10,0" VerticalAlignment="Top" ToolTip="Select an output device to capture from."
                          DisplayMemberPath="FriendlyName"
                          SelectedValuePath="FriendlyName"
                          ItemsSource="{Binding AudioOutputDeviceList}"
                          SelectedValue="{Binding Source={x:Static p:Settings.Default}, Path=AudioOutputDevice, Mode=TwoWay}"
                          IsEnabled="{Binding Source={x:Static p:Settings.Default}, Path=OptAudioUseDefaultOutput, Mode=TwoWay, Converter={StaticResource boolSwap}}" SelectionChanged="AudioOutputDeviceComboBox_SelectionChanged"/>

                <RadioButton x:Name="AudioInputDeviceRadioButton" Content="Audio Input Device" HorizontalAlignment="Left" Margin="10,216,0,0" VerticalAlignment="Top"
                             ToolTip="Capture audio from an input device, such as a mic or line-in."
                             IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=OptAudioFromInput, Mode=TwoWay}" Checked="AudioInputDeviceRadioButton_Checked"/>
                <CheckBox x:Name="UseDefaultInputDevice" Content="Use Default Device" HorizontalAlignment="Left" Margin="23,231,0,0" VerticalAlignment="Top"
                	ToolTip="Capture audio from an output device, such as your speakers or headphones."
                	IsChecked="{Binding OptAudioUseDefaultInput, Mode=TwoWay, Source={x:Static p:Settings.Default}}" Checked="UseDefaultInputDevice_Checked"/>
                <ComboBox x:Name="AudioInputDeviceComboBox" Margin="10,246,10,0" VerticalAlignment="Top" ToolTip="Select an input device to capture from."
                          DisplayMemberPath="FriendlyName"
                          SelectedValuePath="FriendlyName"
                          ItemsSource="{Binding AudioInputDeviceList}"
                          SelectedValue="{Binding Source={x:Static p:Settings.Default}, Path=AudioInputDevice, Mode=TwoWay}"
                          IsEnabled="{Binding Source={x:Static p:Settings.Default}, Path=OptAudioUseDefaultInput, 
                            Mode=TwoWay, Converter={StaticResource boolSwap}}" SelectionChanged="AudioInputDeviceComboBox_SelectionChanged"/>

                <Label Content="Frames per Second" HorizontalAlignment="Left" Margin="9,275,0,0" VerticalAlignment="Top"/>
                <xctk:IntegerUpDown HorizontalAlignment="Left" Margin="124,275,0,0" VerticalAlignment="Top" Width="57" Maximum="120" Minimum="1"
                                    Value="{Binding Source={x:Static p:Settings.Default}, Path=OptFramesPerSecond, Mode=TwoWay}"/>
                <Button x:Name="ApplySpectroChangesButton" Content="Restart Engine" HorizontalAlignment="Left" Margin="74,0,0,2" VerticalAlignment="Bottom" Width="107"
                            Style="{StaticResource MetroButton}" Click="ApplySpectroChangesButton_Click"
                        ToolTip="If something went wrong when changing hardware, re-initialize everything."/>
            </Grid>

            <!-- Edit Grid -->
            <Grid x:Name="GridLeftEdit" Grid.Column="0" Visibility="Visible" Margin="0,0,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="296*"/>
                    <ColumnDefinition Width="200*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="50*"/>
                    <RowDefinition Height="351*"/>
                </Grid.RowDefinitions>

                <!-- Top of the grid displaying info and Back button -->
                <Grid x:Name="GridPageBeingEdited">
                    <Button x:Name="PageBeingEditedDoneBotton" Content="Done" HorizontalAlignment="Left" Margin="10,22,0,0" 
                            VerticalAlignment="Top" Width="75" Click="PageBeingEditedDoneBotton_Click"
                            Style="{StaticResource MetroButton}" Foreground="{StaticResource TextColorBrush}"/>
                    <Label x:Name="PageBeingEditedLabel" Content="PageEdit" HorizontalAlignment="Left" Margin="90,20,0,0" VerticalAlignment="Top"/>
                </Grid>

                <!-- Colours Grid -->
                <Grid x:Name="GridColor" Grid.Column="1" Visibility="Hidden" Grid.Row="1">
                    <Label x:Name="ColourLabel" Content="Colours" Margin="10,10,10,0" VerticalAlignment="Top" Width="auto" HorizontalContentAlignment="Center" Height="26"/>
                    <Controls:RgbSliders x:Name="ColorSliders" Margin="10,36,10,0" VerticalAlignment="Top" Width="Auto"/>
                    <Grid Margin="10,118,10,0" Height="45" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="AcceptColourButton" Content="Accept" Margin="0,10,2,0" VerticalAlignment="Top" 
                                Height="23" Grid.Column="0" Click="AcceptColourButton_Click" Style="{StaticResource MetroButton}"/>
                        <Button x:Name="CancelColourButton" Content="Cancel" Margin="2,10,0,0" VerticalAlignment="Top"
                                Height="23" Grid.Column="1" Click="CancelColourButton_Click" Style="{StaticResource MetroButton}"/>
                    </Grid>
                </Grid>

                <!-- Foreground: Spectrograph -->
                <Grid x:Name="GridForegroundSpectro" Grid.ColumnSpan="2" Visibility="Visible" Grid.Row="1">
                    <Label Content="Style" Grid.Row="0" Grid.Column="0" Margin="10,5,0,0" VerticalAlignment="Top" Width="auto" Height="26" HorizontalAlignment="Left"/>
                    <ComboBox x:Name="ForegroundSpectroStyle" Grid.Row="0" Grid.Column="0" Margin="10,26,0,0" VerticalAlignment="Top" 
                                  ToolTip="The style of light to be used for this effect." 
                                  ItemsSource="{DynamicResource ForegroundSpectroStyleList}"
                                  SelectedValue="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundSpectroStyle, Mode=TwoWay}"
                                  HorizontalAlignment="Left" Width="150" SelectionChanged="ForegroundSpectroStyle_SelectionChanged"/>
                    <xctk:ColorPicker x:Name="fftColorPicker" SelectedColor="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundSpectroColor,
                                  Mode=TwoWay, Converter={StaticResource ColorToStringConverter}}"
                                  HorizontalAlignment="Left" Margin="165,26,0,0" VerticalAlignment="Top" Width="50" 
                                  ColorMode="ColorCanvas" ShowDropDownButton="False" ShowAdvancedButton="False"/>
                    <xctk:ColorPicker x:Name="fftColorPicker_Gradient" 
                                  SelectedColor="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundSpectroColorGradient,
                                  Mode=TwoWay, Converter={StaticResource ColorToStringConverter}}"
                                  HorizontalAlignment="Left" Margin="220,26,0,0" VerticalAlignment="Top" Width="50" 
                                  ColorMode="ColorCanvas" ShowDropDownButton="False" ShowAdvancedButton="False"/>
                    <xctk:IntegerUpDown x:Name="fftRainbowBrightness" HorizontalAlignment="Left" Margin="165,26,0,0" 
                                        VerticalAlignment="Top" Width="61" Maximum="255" Minimum="0" Increment="5"
                    	                Value="{Binding FftRainbowBrightness, Mode=TwoWay, Source={x:Static p:Settings.Default}}"
                                        ToolTip="Brightness of the rainbow."/>
                    <Label x:Name="SpectroRainbowDirectionLabel" Content="Direction" Grid.Column="0" VerticalAlignment="Top" 
                    	Width="auto" Height="26" HorizontalAlignment="Left" Margin="307,5,0,0"/>
                    <ComboBox x:Name="SpectroRainbowDirection" Grid.Column="0" Margin="300,26,0,0" VerticalAlignment="Top"
                                      ToolTip="The direction that the rainbow will travel."
                                      ItemsSource="{DynamicResource SpectroRainbowDirectionList}"
                                      SelectedValue="{Binding Source={x:Static p:Settings.Default}, Path=SpectroRainbowDirection, Mode=TwoWay}"
                                      HorizontalAlignment="Left" Width="61" SelectionChanged="ForegroundRandomLightsStyle_SelectionChanged"/>
                    <Label x:Name="SpectroCycleLabel" Content="Cycle" Grid.Column="0" VerticalAlignment="Top" 
                           Width="auto" Height="26" HorizontalAlignment="Left" Margin="231,5,0,0"/>
                    <xctk:IntegerUpDown x:Name="SpectroCycleUpDown" HorizontalAlignment="Left" Margin="231,26,0,0" VerticalAlignment="Top" Width="65"
                    	Value="{Binding BackgroundRepeatTime, Mode=TwoWay, Source={x:Static p:Settings.Default}}" 
                                        Minimum="200" Maximum="60000" Increment="100"
                                        ToolTip="Time in milliseconds before the effect repeats. This is synced with Background effects."/>

                    <Label x:Name="fftRainbowBrightnessLabel" Content="Brightness" HorizontalAlignment="Left" Margin="165,5,0,0" VerticalAlignment="Top"/>
                    <Label Content="FFT Size" Grid.Row="0" Grid.Column="0" Margin="42,50,0,0" VerticalAlignment="Top" Width="auto" Height="26" HorizontalAlignment="Left"/>
                    <ComboBox HorizontalAlignment="Left" Margin="99,52,0,0" VerticalAlignment="Top" Width="61"
                              ItemsSource="{DynamicResource FftSizeList}"
                              SelectedValue="{Binding Source={x:Static p:Settings.Default}, Path=FftSize, Mode=TwoWay}"
                              ToolTip="The amount of samples to include in one frame. The higher this is, the more accurate but slower the display is. Default is 1024."/>
                    <Label Content="Bins per Point" Grid.Row="0" Grid.Column="0" Margin="11,76,0,0" VerticalAlignment="Top" Width="auto" Height="26" HorizontalAlignment="Left"/>
                    <ComboBox HorizontalAlignment="Left" Margin="99,78,0,0" VerticalAlignment="Top" Width="61"
                    	ItemsSource="{DynamicResource FftBinsPerPointList}"
                    	SelectedValue="{Binding Source={x:Static p:Settings.Default}, Path=FftBinsPerPoint, Mode=TwoWay}"
                              ToolTip="Amount of samples per point of data. Higher numbers lead to more rounded corners. Default is 2."/>
                    <Label Content="Decibel Range" Grid.Row="0" Grid.Column="0" Margin="9,101,0,0" VerticalAlignment="Top" Width="auto" Height="26" HorizontalAlignment="Left"/>
                    <xctk:IntegerUpDown x:Name="dbMinUpDown" HorizontalAlignment="Left" Margin="99,104,0,0" VerticalAlignment="Top" Width="61" Maximum="-10" Minimum="-120"
                    	Value="{Binding FftAmplitudeMin, Mode=TwoWay, Source={x:Static p:Settings.Default}}" ValueChanged="dbMinUpDown_ValueChanged"
                                        ToolTip="The minimum loudness to respond to. The closer to 0, the louder a sound."/>
                    <Label Content="to" Grid.Row="0" Grid.Column="0" Margin="165,101,0,0" VerticalAlignment="Top" Width="auto" Height="26" HorizontalAlignment="Left"/>
                    <xctk:IntegerUpDown x:Name="dbMaxUpDown" HorizontalAlignment="Left" Margin="191,104,0,0" VerticalAlignment="Top" Width="61" Maximum="0" Minimum="-110"
                    	Value="{Binding FftAmplitudeMax, Mode=TwoWay, Source={x:Static p:Settings.Default}}" ValueChanged="dbMaxUpDown_ValueChanged"
                                        ToolTip="The maximum loudness to respond to. The closer to 0, the louder a sound."/>
                    <xctk:IntegerUpDown x:Name="freqMinUpDown" HorizontalAlignment="Left" Margin="99,130,0,0" VerticalAlignment="Top" Width="61" Maximum="19900" Minimum="0"
                    	Value="{Binding FftFrequencyMin, Mode=TwoWay, Source={x:Static p:Settings.Default}}" ValueChanged="freqMinUpDown_ValueChanged" Increment="10"
                                        ToolTip="The lowest frequencies to respond to. These are on the furthest point left of the keyboard."/>
                    <Label Content="to" Grid.Row="0" Grid.Column="0" Margin="165,126,0,0" VerticalAlignment="Top" Width="auto" Height="26" HorizontalAlignment="Left"/>
                    <Label Content="Frequencies" Grid.Row="0" Grid.Column="0" Margin="21,126,0,0" VerticalAlignment="Top" Width="auto" Height="26" HorizontalAlignment="Left"/>
                    <xctk:IntegerUpDown x:Name="freqMaxUpDown" HorizontalAlignment="Left" Margin="191,130,0,0" VerticalAlignment="Top" Width="61" Maximum="20000" Minimum="100"
                    	Value="{Binding FftFrequencyMax, Mode=TwoWay, Source={x:Static p:Settings.Default}}" ValueChanged="freqMaxUpDown_ValueChanged" Increment="10"
                                        ToolTip="The highest frequencies to respond to. These are on the furthest point right of the keyboard."/>
                    <Label Content="Hz" Grid.Row="0" Grid.Column="0" Margin="257,128,0,0" VerticalAlignment="Top" Width="auto" Height="26" HorizontalAlignment="Left"/>
                    <Label Content="Window" Grid.Row="0" Grid.Column="0" Margin="10,167,0,0" VerticalAlignment="Top" Width="auto" Height="26" HorizontalAlignment="Left"/>
                    <ComboBox x:Name="ForegroundWindowingStyle" Grid.Row="0" Grid.Column="0" Margin="10,189,0,0" VerticalAlignment="Top"
                    	ToolTip="The Windowing function used to shape the data. This will change the appearance of the spectro slightly."
                    	ItemsSource="{DynamicResource FftWindowingModeList}"
                    	SelectedValue="{Binding FftWindowingMode, Mode=TwoWay, Source={x:Static p:Settings.Default}}"
                    	HorizontalAlignment="Left" Width="150" SelectionChanged="ForegroundRandomLightsStyle_SelectionChanged"/>
                    <CheckBox Content="Logarithmic Volume" HorizontalAlignment="Left" Margin="11,218,0,0" VerticalAlignment="Top"
                              IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=FftUseLogY, Mode=TwoWay}"
                              ToolTip="Show loudness along the height of the keyboard on a logarithmic or linear scale."/>
                    <CheckBox Content="Logarithmic Frequencies" HorizontalAlignment="Left" Margin="11,238,0,0" VerticalAlignment="Top"
                              IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=FftUseLogX, Mode=TwoWay}"
                              ToolTip="Space frequencies along the length of the keyboard on a logarithmic or linear scale."/>
                    <xctk:IntegerUpDown x:Name="freqBoostCheckBox" HorizontalAlignment="Left" Margin="11,258,0,0" VerticalAlignment="Top" Width="61" Maximum="60" Minimum="0"
                    	Value="{Binding FftBoostHighFrequencies, Mode=TwoWay, Source={x:Static p:Settings.Default}}" 
                                       ValueChanged="freqMinUpDown_ValueChanged" Increment="1"
                                       ToolTip="Gain this many dB at the furthest right of the spectrum. [Default is 10]"/>
                    <CheckBox Content="Boost Higher Frequencies" HorizontalAlignment="Left" Margin="80,260,0,0" VerticalAlignment="Top"
                    	IsChecked="{Binding FftUseFrequencyBoost, Mode=TwoWay, Source={x:Static p:Settings.Default}}"
                              ToolTip="Creates a slope that gradually increases amplification towards the right side of the keyboard."/>
                    <CheckBox Content="Effects on Mouse" HorizontalAlignment="Left" Margin="11,290,0,0" VerticalAlignment="Top"
                    	IsChecked="{Binding ForegroundSpectroOnMouse, Mode=TwoWay, Source={x:Static p:Settings.Default}}"
                    	ToolTip="Show loudness along the height of the keyboard on a logarithmic or linear scale." IsEnabled="False"/>
                    <Grid x:Name="GridForegroundSpectroPerRow" Visibility="Visible" Grid.Row="0" Margin="300,10,58,75">
                        <xctk:ColorPicker x:Name="fftRow7Picker"  
                                  SelectedColor="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundSpectroRow7,
                                  Mode=TwoWay, Converter={StaticResource ColorToStringConverter}}"
                                  HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="50" 
                                  ColorMode="ColorCanvas" ShowDropDownButton="False" ShowAdvancedButton="False"/>
                        <xctk:ColorPicker x:Name="fftRow6Picker"  
                                  SelectedColor="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundSpectroRow6,
                                  Mode=TwoWay, Converter={StaticResource ColorToStringConverter}}"
                                  HorizontalAlignment="Left" Margin="10,37,0,0" VerticalAlignment="Top" Width="50" 
                                  ColorMode="ColorCanvas" ShowDropDownButton="False" ShowAdvancedButton="False"/>
                        <xctk:ColorPicker x:Name="fftRow5Picker"  
                                  SelectedColor="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundSpectroRow5,
                                  Mode=TwoWay, Converter={StaticResource ColorToStringConverter}}"
                                  HorizontalAlignment="Left" Margin="10,64,0,0" VerticalAlignment="Top" Width="50" 
                                  ColorMode="ColorCanvas" ShowDropDownButton="False" ShowAdvancedButton="False"/>
                        <xctk:ColorPicker x:Name="fftRow4Picker"  
                                  SelectedColor="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundSpectroRow4,
                                  Mode=TwoWay, Converter={StaticResource ColorToStringConverter}}"
                                  HorizontalAlignment="Left" Margin="10,91,0,0" VerticalAlignment="Top" Width="50" 
                                  ColorMode="ColorCanvas" ShowDropDownButton="False" ShowAdvancedButton="False"/>
                        <xctk:ColorPicker x:Name="fftRow3Picker"  
                                  SelectedColor="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundSpectroRow3,
                                  Mode=TwoWay, Converter={StaticResource ColorToStringConverter}}"
                                  HorizontalAlignment="Left" Margin="10,118,0,0" VerticalAlignment="Top" Width="50" 
                                  ColorMode="ColorCanvas" ShowDropDownButton="False" ShowAdvancedButton="False"/>
                        <xctk:ColorPicker x:Name="fftRow2Picker"  
                                  SelectedColor="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundSpectroRow2,
                                  Mode=TwoWay, Converter={StaticResource ColorToStringConverter}}"
                                  HorizontalAlignment="Left" Margin="10,145,0,0" VerticalAlignment="Top" Width="50" 
                                  ColorMode="ColorCanvas" ShowDropDownButton="False" ShowAdvancedButton="False"/>
                        <xctk:ColorPicker x:Name="fftRow1Picker"  
                                  SelectedColor="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundSpectroRow1,
                                  Mode=TwoWay, Converter={StaticResource ColorToStringConverter}}"
                                  HorizontalAlignment="Left" Margin="10,172,0,0" VerticalAlignment="Top" Width="50" 
                                  ColorMode="ColorCanvas" ShowDropDownButton="False" ShowAdvancedButton="False"/>
                        <Label Content="Row 7" HorizontalAlignment="Left" Margin="65,9,0,0" VerticalAlignment="Top"/>
                        <Label Content="Row 6" HorizontalAlignment="Left" Margin="65,36,0,0" VerticalAlignment="Top"/>
                        <Label Content="Row 5" HorizontalAlignment="Left" Margin="65,63,0,0" VerticalAlignment="Top"/>
                        <Label Content="Row 4" HorizontalAlignment="Left" Margin="65,90,0,0" VerticalAlignment="Top"/>
                        <Label Content="Row 3" HorizontalAlignment="Left" Margin="65,117,0,0" VerticalAlignment="Top"/>
                        <Label Content="Row 2" HorizontalAlignment="Left" Margin="65,144,0,0" VerticalAlignment="Top"/>
                        <Label Content="Row 1" HorizontalAlignment="Left" Margin="65,171,0,0" VerticalAlignment="Top"/>
                    </Grid>
                </Grid>

                <!-- Foreground: Random Lights -->
                <Grid x:Name="GridForegroundRandomLights" Grid.Column="0" Visibility="Hidden" Grid.Row="1">
                    <Grid Margin="0,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="55"/>
                            <RowDefinition Height="60*"/>
                            <RowDefinition Height="173*"/>
                        </Grid.RowDefinitions>
                        <Label Content="Light Style" Grid.Row="0" Grid.Column="0" Margin="10,5,0,0" VerticalAlignment="Top" Width="150" Height="26" HorizontalAlignment="Left"/>
                        <ComboBox x:Name="ForegroundRandomLightsStyle" Grid.Row="0" Grid.Column="0" Margin="10,26,0,0" VerticalAlignment="Top"  
                                  ToolTip="The style of light to be used for this effect."
                                  ItemsSource="{DynamicResource ForegroundRandomLightsStyleList}"
                                  SelectedValue="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundRandomLightsStyle, Mode=TwoWay}"
                                  HorizontalAlignment="Left" Width="150" SelectionChanged="ForegroundRandomLightsStyle_SelectionChanged"/>
                        <!-- When "Solid" is selected -->
                        <xctk:IntegerUpDown x:Name="ForegroundRandomLightsSolidDurationUD" HorizontalAlignment="Left" Margin="10,23,0,0" 
                                            VerticalAlignment="Top" Width="93" Maximum="60000" Minimum="0" Visibility="Visible"
                                            Value="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundRandomLightsSwitchDuration, Mode=TwoWay}" 
                                            Increment="100" Grid.Row="1"/>
                        <!-- When "Fade" is selected -->
                        <xctk:IntegerUpDown x:Name="ForegroundRandomLightsFadeSolidDurationUD" HorizontalAlignment="Left" Margin="10,52,0,0" 
                                            VerticalAlignment="Top" Width="93" Maximum="60000" Minimum="0" Visibility="Visible"
                                            Value="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundRandomLightsFadeSolidDuration, Mode=TwoWay}"
                                            Increment="100" Grid.RowSpan="2"/>
                        <Label x:Name="ForegroundRandomLightsFadeSolidDurationLabel" Content="Milliseconds to remain solid" HorizontalAlignment="Left" 
                               Margin="108,52,0,0" VerticalAlignment="Top" Height="26" Width="158" Visibility="Visible"
                               ToolTip="Time to remain solid before beginning to fade." Grid.RowSpan="2"/>

                        <xctk:IntegerUpDown x:Name="ForegroundRandomLightsFadeTotalDurationUD" HorizontalAlignment="Left" Margin="10,23,0,0" 
                                            VerticalAlignment="Top" Width="93" Maximum="60000" Minimum="0" Height="25" Visibility="Visible"
                                            Value="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundRandomLightsFadeTotalDuration, Mode=TwoWay}" Increment="100" Grid.Row="1"/>
                        <Label x:Name="ForegroundRandomLightsFadeTotalDurationLabel" Content="Milliseconds total" HorizontalAlignment="Left" 
                               Margin="108,23,0,0" VerticalAlignment="Top" Height="26" Width="103" Visibility="Visible"
                               ToolTip="Total time of the effect including solid and fade." Grid.Row="1"/>

                        <!-- Used for Solid and Fade -->
                        <!-- Bottom Portion: Colour Options-->
                        <Label Content="Start Colour" Grid.Row="2" Grid.Column="0" Margin="10,0,0,0" VerticalAlignment="Top" Height="26" HorizontalAlignment="Left" Width="150"/>
                        <ComboBox x:Name="ForegroundRandomLightsStartType" Grid.Row="2" Grid.Column="0" Margin="10,21,0,0" VerticalAlignment="Top" 
                                  ToolTip="The colour to start the effect." HorizontalAlignment="Left" Width="150"
                                  ItemsSource="{DynamicResource ForegroundRandomLightsStartTypeList}"
                                  SelectedValue="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundRandomLightsStartType, Mode=TwoWay}" 
                                  SelectionChanged="ForegroundRandomLightsStartType_SelectionChanged"/>
                        <Button x:Name="ForegroundRandomLightsStartColorEdit" Style="{StaticResource HyperlinkLikeButton}" Content="Edit" Margin="0,5,136,0" VerticalAlignment="Top" 
                        	VerticalContentAlignment="Bottom" HorizontalAlignment="Right" Width="24" ToolTip="Edit the selected foreground effects." Click="ForegroundRandomLightsStartColorEdit_Click" Grid.Row="2" Height="16"/>
                        <xctk:ColorPicker x:Name="ForegroundRandomLightsStartColor"
                                  HorizontalAlignment="Left" Height="23" Margin="165,20,0,0" VerticalAlignment="Top" Width="50" 
                                  ColorMode="ColorCanvas" ShowDropDownButton="False" ShowAdvancedButton="False" Grid.Row="2"
                                  SelectedColor="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundRandomLightsSwitchColorStart, 
                                    Mode=TwoWay, Converter={StaticResource ColorToStringConverter}}"/>

                        <Label Content="End Colour" Grid.Row="2" Grid.Column="0" Margin="10,50,0,0" VerticalAlignment="Top" Width="150" Height="26" HorizontalAlignment="Left"/>
                        <ComboBox x:Name="ForegroundRandomLightsEndType" Grid.Row="2" Grid.Column="0" Margin="10,71,0,0" VerticalAlignment="Top" 
                                  ToolTip="The colour to finish the effect." HorizontalAlignment="Left" Width="150"
                                  ItemsSource="{DynamicResource ForegroundRandomLightsEndTypeList}"
                                  SelectedValue="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundRandomLightsEndType, Mode=TwoWay}" SelectionChanged="ForegroundRandomLightsEndType_SelectionChanged"/>
                        <Button x:Name="ForegroundRandomLightsEndColorEdit" Style="{StaticResource HyperlinkLikeButton}" Content="Edit" Margin="0,55,136,0" VerticalAlignment="Top" 
                        	VerticalContentAlignment="Bottom" HorizontalAlignment="Right" Width="24" ToolTip="Edit the selected foreground effects." Click="ForegroundRandomLightsEndColorEdit_Click" Grid.Row="2" Height="16"/>
                        <xctk:ColorPicker x:Name="ForegroundRandomLightsEndColor"
                                  HorizontalAlignment="Left" Height="23" Margin="165,70,0,0" VerticalAlignment="Top" Width="50" 
                                  ColorMode="ColorCanvas" ShowDropDownButton="False" ShowAdvancedButton="False" Grid.Row="2"
                                  SelectedColor="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundRandomLightsSwitchColorEnd, 
                                    Mode=TwoWay, Converter={StaticResource ColorToStringConverter}}"/>
                    </Grid>
                </Grid>

                <!-- Foreground: Reactive Typing -->
                <Grid x:Name="GridForegroundReactive" Grid.Column="0" Visibility="Hidden" Grid.Row="1">
                    <Grid Margin="0,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="55"/>
                            <RowDefinition Height="60*"/>
                            <RowDefinition Height="173*"/>
                        </Grid.RowDefinitions>
                        <Label Content="Light Style" Grid.Row="0" Grid.Column="0" Margin="10,5,0,0" VerticalAlignment="Top" Width="150" Height="26" HorizontalAlignment="Left"/>
                        <ComboBox x:Name="ForegroundReactiveStyle" Grid.Row="0" Grid.Column="0" Margin="10,26,0,0" VerticalAlignment="Top" 
                                  ToolTip="The style of light to be used for this effect."
                                  ItemsSource="{DynamicResource ForegroundReactiveStyleList}"
                                  SelectedValue="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundReactiveStyle, Mode=TwoWay}"
                                  HorizontalAlignment="Left" Width="150" SelectionChanged="ForegroundReactiveStyle_SelectionChanged"/>
                        <!-- When "Solid" is selected -->
                        <xctk:IntegerUpDown x:Name="ForegroundReactiveSolidDurationUD" HorizontalAlignment="Left" Margin="10,23,0,0" 
                                            VerticalAlignment="Top" Width="93" Maximum="60000" Minimum="0" Visibility="Visible"
                                            Value="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundReactiveSwitchSolidDuration, Mode=TwoWay}" 
                                            Increment="100" Grid.Row="1"/>
                        <!-- When "Fade" is selected -->
                        <xctk:IntegerUpDown x:Name="ForegroundReactiveFadeSolidDurationUD" HorizontalAlignment="Left" Margin="10,52,0,0" 
                                            VerticalAlignment="Top" Width="93" Maximum="60000" Minimum="0" Visibility="Visible"
                                            Value="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundReactiveFadeSolidDuration, Mode=TwoWay}" 
                                            Increment="100" Grid.RowSpan="2"/>
                        <Label x:Name="ForegroundReactiveFadeSolidDurationLabel" Content="Milliseconds to remain solid" HorizontalAlignment="Left" 
                               Margin="108,52,0,0" VerticalAlignment="Top" Height="26" Width="158" Visibility="Visible"
                               ToolTip="Time to remain solid before beginning to fade." Grid.RowSpan="2"/>

                        <xctk:IntegerUpDown x:Name="ForegroundReactiveFadeTotalDurationUD" HorizontalAlignment="Left" Margin="10,23,0,0" Grid.Row="1"
                                            VerticalAlignment="Top" Width="93" Maximum="60000" Minimum="0" Visibility="Visible"
                                            Value="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundReactiveFadeTotalDuration, Mode=TwoWay}" Increment="100"/>
                        <Label x:Name="ForegroundReactiveFadeTotalDurationLabel" Content="Milliseconds total" HorizontalAlignment="Left" 
                               Margin="108,23,0,0" VerticalAlignment="Top" Height="26" Width="103" Visibility="Visible"
                               ToolTip="Total time of the effect including solid and fade." Grid.Row="1"/>

                        <!-- Used for Solid and Fade -->
                        <!-- Bottom Portion: Colour Options-->
                        <Label Content="Start Colour" Grid.Row="2" Grid.Column="0" Margin="10,0,0,0" VerticalAlignment="Top" Height="26" HorizontalAlignment="Left" Width="150"/>
                        <ComboBox x:Name="ForegroundReactiveStartType" Grid.Row="2" Grid.Column="0" Margin="10,21,0,0" VerticalAlignment="Top" 
                                  ToolTip="The colour to start the effect." HorizontalAlignment="Left" Width="150"
                                  ItemsSource="{DynamicResource ForegroundReactiveStartTypeList}"
                                  SelectedValue="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundReactiveStartType, Mode=TwoWay}" 
                                  SelectionChanged="ForegroundReactiveStartType_SelectionChanged"/>
                        <Button x:Name="ForegroundReactiveStartColorEdit" Style="{StaticResource HyperlinkLikeButton}" 
                                Content="Edit" Margin="0,5,136,0" VerticalAlignment="Top" VerticalContentAlignment="Bottom" HorizontalAlignment="Right" 
                                Width="24" ToolTip="Edit the selected foreground effects." Click="ForegroundReactiveStartColorEdit_Click" Grid.Row="2" Height="16"/>
                        <xctk:ColorPicker x:Name="ForegroundReactiveStartColor"
                                  HorizontalAlignment="Left" Height="23" Margin="165,20,0,0" VerticalAlignment="Top" Width="50" 
                                  ColorMode="ColorCanvas" ShowDropDownButton="False" ShowAdvancedButton="False" Grid.Row="2"
                                  SelectedColor="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundReactiveSwitchColorStart, 
                                    Mode=TwoWay, Converter={StaticResource ColorToStringConverter}}"/>

                        <Label Content="End Colour" Grid.Row="2" Grid.Column="0" Margin="10,50,0,0" VerticalAlignment="Top" Width="150" Height="26" HorizontalAlignment="Left"/>
                        <ComboBox x:Name="ForegroundReactiveEndType" Grid.Row="2" Grid.Column="0" Margin="10,71,0,0" VerticalAlignment="Top" 
                                  ToolTip="The colour to finish the effect." HorizontalAlignment="Left" Width="150"
                                  ItemsSource="{DynamicResource ForegroundReactiveEndTypeList}"
                                  SelectedValue="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundReactiveEndType, Mode=TwoWay}" SelectionChanged="ForegroundReactiveEndType_SelectionChanged"/>
                        <Button x:Name="ForegroundReactiveEndColorEdit" Style="{StaticResource HyperlinkLikeButton}" Content="Edit" Margin="0,55,136,0" VerticalAlignment="Top" 
                        	VerticalContentAlignment="Bottom" HorizontalAlignment="Right" Width="24" ToolTip="Edit the selected foreground effects."
                                Click="ForegroundReactiveEndColorEdit_Click" Grid.Row="2" Height="16"/>
                        <xctk:ColorPicker x:Name="ForegroundReactiveEndColor"
                                  HorizontalAlignment="Left" Height="23" Margin="165,70,0,0" VerticalAlignment="Top" Width="50" 
                                  ColorMode="ColorCanvas" ShowDropDownButton="False" ShowAdvancedButton="False" Grid.Row="2"
                                  SelectedColor="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundReactiveSwitchColorEnd, 
                                    Mode=TwoWay, Converter={StaticResource ColorToStringConverter}}"/>
                    </Grid>
                </Grid>

                <!-- Foreground: Heatmap -->
                <Grid x:Name="GridForegroundHeatmap" Grid.Column="0" Visibility="Hidden" Grid.Row="1">
                    <!-- Bottom Portion: Colour Options-->
                    <Label Content="Most Struck Colour" Margin="10,10,0,0" VerticalAlignment="Top" Height="26" HorizontalAlignment="Left" Width="auto"/>
                    <xctk:ColorPicker x:Name="ForegroundHeatmapColorMost"
                                  HorizontalAlignment="Left" Height="24" Margin="127,10,0,0" VerticalAlignment="Top" Width="50" 
                                  ColorMode="ColorCanvas" ShowDropDownButton="False" ShowAdvancedButton="False"
                                  SelectedColor="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundHeatmapColorMost, 
                                    Mode=TwoWay, Converter={StaticResource ColorToStringConverter}}"/>

                    <Label Content="Least Struck Colour" Margin="10,41,0,0" VerticalAlignment="Top" Width="auto" Height="26" HorizontalAlignment="Left"/>
                    <xctk:ColorPicker x:Name="ForegroundHeatmapColorLeast"
                                  HorizontalAlignment="Left" Height="24" Margin="127,43,0,0" VerticalAlignment="Top" Width="50" 
                                  ColorMode="ColorCanvas" ShowDropDownButton="False" ShowAdvancedButton="False"
                                  SelectedColor="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundHeatmapColorLeast, 
                                    Mode=TwoWay, Converter={StaticResource ColorToStringConverter}}"/>
                    <Button x:Name="HeatmapResetCountButton" Content="Reset Strike Count" HorizontalAlignment="Left" 
                            Margin="10,104,0,0" VerticalAlignment="Top" Width="167" Style="{StaticResource MetroButton}" Click="HeatmapResetCountButton_Click"/>
                </Grid>

                <!-- Foreground: CPU Usage Bar -->
                <Grid x:Name="GridForegroundCpuBar" Grid.Column="0" Visibility="Hidden" Grid.Row="1">
                    <Label Content="Colour" Margin="10,9,0,0" VerticalAlignment="Top" Height="26" HorizontalAlignment="Left" Width="auto"/>
                    <xctk:ColorPicker x:Name="ForegroundCpuBarColor0"
                                  HorizontalAlignment="Left" Height="24" Margin="110,10,0,0" VerticalAlignment="Top" Width="60" 
                                  ColorMode="ColorCanvas" ShowDropDownButton="False" ShowAdvancedButton="False"
                                  SelectedColor="{Binding Source={x:Static p:Settings.Default}, Path=ForegroundCpuBarColor0, 
                                    Mode=TwoWay, Converter={StaticResource ColorToStringConverter}}"/>
                    <Label Content="Refresh (ms)" Margin="10,37,0,0" VerticalAlignment="Top" Width="auto" Height="26" HorizontalAlignment="Left"/>
                    <xctk:IntegerUpDown HorizontalAlignment="Left" Margin="110,39,0,0" VerticalAlignment="Top" Width="60" Maximum="5000" Minimum="100"
                    	Value="{Binding CpuUpdateTime, Mode=TwoWay, Source={x:Static p:Settings.Default}}" Increment="100"/>
                    <Label Content="Growth Direction" Margin="10,68,0,0" VerticalAlignment="Top" Width="auto" Height="26" HorizontalAlignment="Left"/>
                    <ComboBox x:Name="ForegroundCpuBarDirectionDropDown" Margin="10,94,96,0" VerticalAlignment="Top" Height="24" ToolTip="Direction to grow the bar."
                    	ItemsSource="{DynamicResource BackgroundRainbowDirectionList}"
                    	SelectedValue="{Binding ForegroundCpuBarDirection, Mode=TwoWay, Source={x:Static p:Settings.Default}}"/>
                </Grid>

                <!-- Backround: Solid Colour -->
                <Grid x:Name="GridBackgroundSolid" Grid.Column="0" Visibility="Hidden" Grid.Row="1">
                    <Label Content="Colour" VerticalAlignment="Top" Width="auto" Height="26" HorizontalAlignment="Left" Margin="10,8,0,0"/>
                    <xctk:ColorPicker SelectedColor="{Binding Source={x:Static p:Settings.Default}, Path=BackgroundSolidColor, 
                                    Mode=TwoWay, Converter={StaticResource ColorToStringConverter}}"
                                  HorizontalAlignment="Left" Margin="61,10,0,0" VerticalAlignment="Top" Width="50" 
                                  ColorMode="ColorCanvas" ShowDropDownButton="False" ShowAdvancedButton="False"/>
                </Grid>

                <!-- Background: Breathe -->
                <Grid x:Name="GridBackgroundBreathe" Grid.Column="0" Visibility="Hidden" Grid.Row="1">
                    <Label Content="Duration" Grid.Column="0" VerticalAlignment="Top" 
                    	Width="auto" Height="26" HorizontalAlignment="Left" Margin="154,3,0,0"/>
                    <Label Content="Step One" Grid.Column="0" VerticalAlignment="Top" 
                           Width="auto" Height="26" HorizontalAlignment="Left" Margin="12,33,0,0"/>
                    <xctk:ColorPicker SelectedColor="{Binding Source={x:Static p:Settings.Default}, Path=BackgroundBreatheStepOneColor, 
                                  Mode=TwoWay, Converter={StaticResource ColorToStringConverter}}"
                                  HorizontalAlignment="Left" Margin="75,34,0,0" VerticalAlignment="Top" Width="50" 
                                  ColorMode="ColorCanvas" ShowDropDownButton="False" ShowAdvancedButton="False"/>
                    <xctk:IntegerUpDown HorizontalAlignment="Left" Margin="151,34,0,0" VerticalAlignment="Top" Width="67"
                                  Value="{Binding Source={x:Static p:Settings.Default}, Path=BackgroundBreatheStepOne, Mode=TwoWay}"/>
                    <Label Content="Transition" Grid.Column="0" VerticalAlignment="Top" 
                    	Width="auto" Height="26" HorizontalAlignment="Left" Margin="12,64,0,0"/>
                    <xctk:IntegerUpDown HorizontalAlignment="Left" Margin="151,65,0,0" VerticalAlignment="Top" Width="67"
                                  Value="{Binding Source={x:Static p:Settings.Default}, Path=BackgroundBreatheTransition, Mode=TwoWay}"/>
                    <Label Content="Step Two" Grid.Column="0" VerticalAlignment="Top" 
                           Width="auto" Height="26" HorizontalAlignment="Left" Margin="12,95,0,0"/>
                    <xctk:ColorPicker SelectedColor="{Binding Source={x:Static p:Settings.Default}, Path=BackgroundBreatheStepTwoColor, 
                                  Mode=TwoWay, Converter={StaticResource ColorToStringConverter}}"
                                  HorizontalAlignment="Left" Margin="75,96,0,0" VerticalAlignment="Top" Width="50" 
                                  ColorMode="ColorCanvas" ShowDropDownButton="False" ShowAdvancedButton="False"/>
                    <xctk:IntegerUpDown HorizontalAlignment="Left" Margin="151,96,0,0" VerticalAlignment="Top" Width="67"
                                  Value="{Binding Source={x:Static p:Settings.Default}, Path=BackgroundBreatheStepTwo, Mode=TwoWay}"/>
                </Grid>

                <!-- Background: Rainbow and Spectrum Fade -->
                <Grid x:Name="GridBackground" Grid.Column="0" Visibility="Hidden" Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="55*"/>
                        <RowDefinition Height="296*"/>
                    </Grid.RowDefinitions>
                    <Label Content="Animation Cycle Time" Grid.Column="0" VerticalAlignment="Top" 
                           Width="auto" Height="26" HorizontalAlignment="Left" Margin="10,3,0,0"/>
                    <xctk:IntegerUpDown HorizontalAlignment="Left" Margin="10,26,0,0" VerticalAlignment="Top" Width="65"
                    	Value="{Binding BackgroundRepeatTime, Mode=TwoWay, Source={x:Static p:Settings.Default}}" 
                                        Minimum="200" Maximum="60000" Increment="100"
                                        ToolTip="Time in milliseconds before the effect repeats."/>
                    <Label Content="Brightness" Grid.Column="0" Margin="0,3,10,0" VerticalAlignment="Top" 
                               Width="65" Height="26" HorizontalAlignment="Right"/>
                    <xctk:IntegerUpDown HorizontalAlignment="Right" Margin="0,26,10,0" VerticalAlignment="Top" Width="65"
                    	    Value="{Binding BackgroundBrightness, Mode=TwoWay, Source={x:Static p:Settings.Default}}"
                                            Minimum="0" Maximum="255" Increment="5"
                                            ToolTip="Brightness of the background effect."/>
                    <Grid x:Name="GridBackgroundRainbow" Grid.Row="1">
                        <Label Content="Direction" Grid.Row="1" Grid.Column="0" Margin="10,0,0,0" VerticalAlignment="Top" Width="58" Height="26" HorizontalAlignment="Left"/>
                        <ComboBox x:Name="BackgroundRainbowDirection" Grid.Row="1" Grid.Column="0" Margin="10,21,0,0" VerticalAlignment="Top"
                                      ToolTip="The direction that the rainbow will travel."
                                      ItemsSource="{DynamicResource BackgroundRainbowDirectionList}"
                                      SelectedValue="{Binding Source={x:Static p:Settings.Default}, Path=BackgroundRainbowDirection, Mode=TwoWay}"
                                      HorizontalAlignment="Left" Width="150" SelectionChanged="ForegroundRandomLightsStyle_SelectionChanged"/>
                    </Grid>
                    <Grid x:Name="GridBackgroundSpectrum" Grid.Row="1">
                        <CheckBox x:Name="BackgroundSpectrumPhaseInvert" Content="Invert Phase" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top"
                	    ToolTip="Capture audio from an output device, such as your speakers or headphones."
                	    IsChecked="{Binding BackgroundSpectrumInvert, Mode=TwoWay, Source={x:Static p:Settings.Default}}"/>
                    </Grid>
                </Grid>

                <!-- Background: Image -->
                <Grid x:Name="GridBackgroundImage" Visibility="Hidden" Grid.Row="1" Grid.ColumnSpan="2">
                    <Button x:Name="BackgroundImageBrowseButton" Content="Browse..." HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="75"
                            Style="{StaticResource MetroButton}" Click="BackgroundImageBrowseButton_Click"/>
                    <Canvas x:Name="BackgroundImageCanvas" HorizontalAlignment="Left" Height="240" Margin="10,38,0,0" VerticalAlignment="Top" Width="459" MouseMove="BackgroundImageCanvas_MouseMove" MouseDown="BackgroundImageCanvas_MouseDown" MouseUp="BackgroundImageCanvas_MouseUp"/>
                    <Canvas x:Name="BackgroundImageResizedCanvas" HorizontalAlignment="Left" Height="7" Margin="126,26,0,0" VerticalAlignment="Top" Width="104"/>
                </Grid>

                <!-- Background: CPU Usage -->
                <Grid x:Name="GridBackgroundCpu" Grid.Column="0" Visibility="Hidden" Grid.Row="1">
                    <Label Content="Colour for 0%" Margin="10,9,0,0" VerticalAlignment="Top" Height="26" HorizontalAlignment="Left" Width="auto"/>
                    <xctk:ColorPicker x:Name="BackgroundCpuColor0"
                                  HorizontalAlignment="Left" Height="24" Margin="110,10,0,0" VerticalAlignment="Top" Width="60" 
                                  ColorMode="ColorCanvas" ShowDropDownButton="False" ShowAdvancedButton="False"
                                  SelectedColor="{Binding Source={x:Static p:Settings.Default}, Path=BackgroundCpuColor0, 
                                    Mode=TwoWay, Converter={StaticResource ColorToStringConverter}}"/>
                    <Label Content="Colour for 25%" Margin="10,38,0,0" VerticalAlignment="Top" Height="26" HorizontalAlignment="Left" Width="auto"/>
                    <xctk:ColorPicker x:Name="BackgroundCpuColor25"
                    	HorizontalAlignment="Left" Height="24" Margin="110,39,0,0" VerticalAlignment="Top" Width="60" 
                    	ColorMode="ColorCanvas" ShowDropDownButton="False" ShowAdvancedButton="False"
                                  SelectedColor="{Binding Source={x:Static p:Settings.Default}, Path=BackgroundCpuColor25, 
                                    Mode=TwoWay, Converter={StaticResource ColorToStringConverter}}"/>
                    <Label Content="Colour for 50%" Margin="10,67,0,0" VerticalAlignment="Top" Width="auto" Height="26" HorizontalAlignment="Left"/>
                    <xctk:ColorPicker x:Name="BackgroundCpuColor50"
                                  HorizontalAlignment="Left" Height="24" Margin="110,68,0,0" VerticalAlignment="Top" Width="60" 
                                  ColorMode="ColorCanvas" ShowDropDownButton="False" ShowAdvancedButton="False"
                                  SelectedColor="{Binding Source={x:Static p:Settings.Default}, Path=BackgroundCpuColor50, 
                                    Mode=TwoWay, Converter={StaticResource ColorToStringConverter}}"/>
                    <Label Content="Colour for 75%" Margin="10,96,0,0" VerticalAlignment="Top" Width="auto" Height="26" HorizontalAlignment="Left"/>
                    <xctk:ColorPicker x:Name="BackgroundCpuColor75"
                    	HorizontalAlignment="Left" Height="24" Margin="110,97,0,0" VerticalAlignment="Top" Width="60" 
                    	ColorMode="ColorCanvas" ShowDropDownButton="False" ShowAdvancedButton="False"
                                  SelectedColor="{Binding Source={x:Static p:Settings.Default}, Path=BackgroundCpuColor75, 
                                    Mode=TwoWay, Converter={StaticResource ColorToStringConverter}}"/>
                    <Label Content="Colour for 100%" Margin="10,125,0,0" VerticalAlignment="Top" Width="auto" Height="26" HorizontalAlignment="Left"/>
                    <xctk:ColorPicker x:Name="BackgroundCpuColor100"
                    	HorizontalAlignment="Left" Height="24" Margin="110,126,0,0" VerticalAlignment="Top" Width="60" 
                    	ColorMode="ColorCanvas" ShowDropDownButton="False" ShowAdvancedButton="False"
                                  SelectedColor="{Binding Source={x:Static p:Settings.Default}, Path=BackgroundCpuColor100, 
                                    Mode=TwoWay, Converter={StaticResource ColorToStringConverter}}"/>
                    <Label Content="Refresh (ms)" Margin="10,156,0,0" VerticalAlignment="Top" Width="auto" Height="26" HorizontalAlignment="Left"/>
                    <xctk:IntegerUpDown HorizontalAlignment="Left" Margin="110,158,0,0" VerticalAlignment="Top" Width="60" Maximum="5000" Minimum="100"
                    	Value="{Binding CpuUpdateTime, Mode=TwoWay, Source={x:Static p:Settings.Default}}" Increment="100"/>
                </Grid>

                <!-- Background: Windows Accent -->
                <Grid x:Name="GridBackgroundWinAccent" Grid.Column="0" Visibility="Hidden" Grid.Row="1">
                    <Label Content="Refresh (seconds)" Margin="10,10,0,0" VerticalAlignment="Top" Width="auto" Height="26" HorizontalAlignment="Left"/>
                    <xctk:IntegerUpDown HorizontalAlignment="Left" Margin="118,12,0,0" VerticalAlignment="Top" Width="60" Maximum="60" Minimum="1"
                    	Value="{Binding BackgroundWinAccentRefresh, Mode=TwoWay, Source={x:Static p:Settings.Default}}" Increment="1"/>
                </Grid>
            </Grid>
        </Grid>

        <!-- Full Width Keyboard Grid-->
        <Grid x:Name="GridKeyboard" Grid.Column="1" Visibility="Hidden" Margin="0,0,0,10">
            <Grid.RowDefinitions>
                <RowDefinition Height="223*"/>
                <RowDefinition Height="87*"/>
            </Grid.RowDefinitions>

            <Canvas x:Name="KeyboardImage" Grid.Row="0" Visibility="Hidden" Margin="0,10,0,0" HorizontalAlignment="Left" Width="602" Height="213" VerticalAlignment="Top"/>

        </Grid>
    </Grid>
</Window>